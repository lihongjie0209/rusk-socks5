name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to build (e.g., v0.1.0)'
        required: false

jobs:
  build:
    name: Build binaries
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Determine tag
        id: vars
        shell: bash
        run: |
          if [[ -n "${{ github.event.inputs.tag }}" ]]; then
            echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
          fi

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: cargo build --release 2>&1 | tee build.log
        shell: bash



      - name: Package
        run: |
          mkdir -p dist
          BIN=rusk-socks5
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            cp target/release/${BIN}.exe dist/${BIN}-windows-x64.exe
            7z a dist/${BIN}-windows-x64.zip dist/${BIN}-windows-x64.exe
            rm dist/${BIN}-windows-x64.exe
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            cp target/release/${BIN} dist/${BIN}-macos
            tar -C dist -czf dist/${BIN}-macos.tar.gz ${BIN}-macos
            rm dist/${BIN}-macos
          else
            cp target/release/${BIN} dist/${BIN}-linux-x64
            tar -C dist -czf dist/${BIN}-linux-x64.tar.gz ${BIN}-linux-x64
            rm dist/${BIN}-linux-x64
          fi
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rusk-socks5-${{ runner.os }}-${{ steps.vars.outputs.tag }}
          path: dist/*
