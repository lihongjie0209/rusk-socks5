name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:

jobs:
  build:
    name: Build ${{ matrix.target }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            archive: tar.gz
            ext: ""
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            archive: tar.gz
            ext: ""
          - os: macos-13
            target: x86_64-apple-darwin
            archive: tar.gz
            ext: ""
          - os: macos-14
            target: aarch64-apple-darwin
            archive: tar.gz
            ext: ""
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            archive: zip
            ext: ".exe"
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            archive: zip
            ext: ".exe"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install musl tools (Linux musl)
        if: startsWith(matrix.target, 'x86_64-unknown-linux-musl')
        run: sudo apt-get update && sudo apt-get install -y musl-tools
        shell: bash

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: cargo build --release --target ${{ matrix.target }} 2>&1 | tee build.log
        shell: bash

      - name: Package artifact
        env:
          BIN: rusk-socks5
        run: |
          set -euxo pipefail
          mkdir -p dist
          BIN_PATH=target/${{ matrix.target }}/release/${BIN}${{ matrix.ext }}
          if [[ ! -f "$BIN_PATH" ]]; then
            echo "Binary not found: $BIN_PATH" >&2
            ls -lah target/${{ matrix.target }}/release || true
            exit 1
          fi

          out_base="${BIN}-${{ matrix.target }}"
          cp "$BIN_PATH" "dist/${out_base}${{ matrix.ext }}"

          if [[ "${{ matrix.archive }}" == "zip" ]]; then
            7z a "dist/${out_base}.zip" "dist/${out_base}${{ matrix.ext }}"
            rm -f "dist/${out_base}${{ matrix.ext }}"
          else
            tar -C dist -czf "dist/${out_base}.tar.gz" "${out_base}${{ matrix.ext }}"
            rm -f "dist/${out_base}${{ matrix.ext }}"
          fi
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: rusk-socks5-${{ matrix.target }}
          path: dist/*
